[["You have a string of 0s and 1s. You can paint each character red or blue. Each red character earns you $r_i$ coins and each blue character earns you $b_i$ coins. After painting, you remove all blue characters and count the number of inversions (pairs of 1 and 0 where 1 appears before 0). For each inversion, you lose 1 coin. What is the maximum number of coins you can earn?", "Codeforces1895G"], ["You are given a string of 0s and 1s and have to color each character either red or blue. Coloring red earns you coins based on $r_i$, coloring blue earns you coins based on $b_i$. After removing all blue characters, you count the number of inversions, i.e., pairs of 1 and 0 where 1 is on the left and 0 is on the right. Each inversion costs 1 coin. Find the maximum number of coins you can earn.", "Codeforces1895G"], ["Given $n$, $x$, and $k$, find the number of arrays of length $n$ satisfying the following conditions:\n- The array contains at least one number from the range $x, x+1, ..., x+k-1$.\n- The difference between consecutive elements of the array is at most $k$.\nReturn the count modulo $10^9+7$.", "Codeforces1895F"], ["Given an array $a$ of $n$ non-negative integers, the task is to determine the number of ways to construct a \"fancy\" array that satisfies the following conditions: \n\n- At least one number from the range $x$ to $x+k-1$ is present in the array.\n- The difference between consecutive elements in the array is at most $k$.\n\nOutput the count of such fancy arrays modulo $10^9+7$.", "Codeforces1895F"], ["You are given two players, Monocarp and Bicarp, who play a card game. Each card has an attack value and a defense value. The game is played by taking turns playing cards in such a way that each card beats the opponent's card. The game continues until a player cannot beat the opponent's card. If the game reaches $100^{500}$ moves, it is declared a draw. Monocarp and Bicarp play optimally and you need to calculate the following: \n1. The number of Monocarp's starting moves that result in a win for Monocarp.\n2. The number of Monocarp's starting moves that result in a draw.\n3. The number of Monocarp's starting moves that result in a win for Bicarp.", "Codeforces1895E"], ["Monocarp and Bicarp are playing a card game. Each card has an attack value and a defence value. Monocarp has a set of cards, and Bicarp has a set of cards. The players take turns playing cards to beat their opponent's cards. The game ends when a player has no cards that beat their opponent's card. The goal is to find the number of Monocarp's starting moves that result in a win for Monocarp, a draw, and a win for Bicarp.", "Codeforces1895E"], ["You have an array of $n-1$ integers, and you need to create a new array of $n$ integers such that each integer from $0$ to $n-1$ appears exactly once. Additionally, for every $i$ from $1$ to $n-1$, the bitwise XOR of $i$th and $(i+1)$th elements of the new array should be equal to the $i$th integer in the given array.", "Codeforces1895D"], ["Given $n-1$ integers, you need to construct an array of length $n$ such that every integer from $0$ to $n-1$ appears exactly once, and for every $i$ from $1$ to $n-1$, the bitwise XOR of $b_i$ and $b_{i+1}$ equals $a_i$.", "Codeforces1895D"], ["You are given a list of ticket pieces, where each piece is a string of digits from 1 to 9. Your task is to count the number of pairs of ticket pieces when concatenated together form a lucky ticket. A lucky ticket is a ticket whose concatenated string has an even length, and the sum of digits in the first half is equal to the sum of digits in the second half.", "Codeforces1895C"], ["Given a list of non-empty strings of digits from $1$ to $9$, find the number of pairs such that concatenating two strings results in a lucky ticket.", "Codeforces1895C"], ["Given a sequence of $2n$ integers, split them into $n$ pairs representing coordinates on a plane. Choose a path that starts and ends at one of these points, visits all $n$ points, and minimizes the sum of distances between adjacent points. The distance between two points $(x_1, y_1)$ and $(x_2, y_2)$ is defined as $|x_1-x_2| + |y_1-y_2|$.", "Codeforces1895B"], ["Given a sequence of $2n$ integers, we need to split them into $n$ pairs representing points on a plane. Then, we need to find a path that visits all the points at least once and ends at the starting point, minimizing the sum of distances between adjacent points on the path.", "Codeforces1895B"], ["Given a one-dimensional coordinate system, Monocarp starts at position 0 and there is a treasure chest at position $x$ and a key at position $y$. Monocarp can perform the following actions:\n- Move one unit to the left or one unit to the right, taking 1 second.\n- Pick up the key or the chest, which takes no time.\n- Put down the chest, which takes no time.\n- Open the chest if Monocarp is at the same position as the chest and has picked up the key, which takes no time.\nMonocarp can carry the chest, but only for a total of $k$ seconds. Find the minimum time required for Monocarp to open the chest.", "Codeforces1895A"], ["Monocarp wants to open a treasure chest located at position $x$ on the OX axis. The key to the chest is located at position $y$. Monocarp can move one unit left or right in one second. It takes no time to pick up the key or chest if Monocarp is at the same position as the object. Monocarp can carry the chest for a maximum of $k$ seconds. What is the minimum time required for Monocarp to open the chest?", "Codeforces1895A"], ["Given an array $a_1, a_2, \\ldots, a_n$, find an array $b_1, b_2, \\ldots, b_n$ consisting of numbers $1$, $2$, $3$ such that only two of the following are true:\n1. There exist indices $1 \\leq i, j \\leq n$ where $a_i = a_j$, $b_i = 1$, and $b_j = 2$.\n2. There exist indices $1 \\leq i, j \\leq n$ where $a_i = a_j$, $b_i = 1$, and $b_j = 3$.\n3. There exist indices $1 \\leq i, j \\leq n$ where $a_i = a_j$, $b_i = 2$, and $b_j = 3$.\n\nIf no such array exists, report it.", "Codeforces1894B"], ["Given an array of integers $a_1, a_2, \\ldots, a_n$, find an array of integers $b_1, b_2, \\ldots, b_n$ such that exactly two out of the following three conditions are satisfied: \n1. There exist indices $i, j$ such that $a_i = a_j$, $b_i = 1$, $b_j = 2$.\n2. There exist indices $i, j$ such that $a_i = a_j$, $b_i = 1$, $b_j = 3$.\n3. There exist indices $i, j$ such that $a_i = a_j$, $b_i = 2$, $b_j = 3$.\n\nIf such an array doesn't exist, report it.", "Codeforces1894B"], ["Given a game consisting of sets and plays, where each play is won by either player A or player B, determine the winner of the entire game based on the information of which player won each play. The game ends when one player reaches a certain number of wins in the sets.", "Codeforces1894A"], ["Given the number of plays in a game and the winner of each play, determine who won the entire game (player A or player B).", "Codeforces1894A"], ["You are given a compressed undirected connected graph. Your task is to assign weights to each vertex and each edge such that:\n- The weight of each vertex is an integer from 1 to 3.\n- The weight of each edge is an integer from 1 to 3.\n- A vertex is called good if the bitwise XOR of the weights of its adjacent edges is neither 0 nor equal to the weight of the vertex.\n- An edge is called good if the bitwise XOR of the weights of its adjacent vertices is neither 0 nor equal to the weight of the edge.\nYou need to find the number of ways to assign the weights such that all vertices and edges are good. Return the remainder of the answer divided by 998,244,353.", "Codeforces1893E"], ["Given an undirected connected graph with additional vertices on each edge, assign weights (integers from 1 to 3) to each vertex and edge. An edge is good if the XOR of its adjacent vertex weights is not equal to the XOR of its own weight. Similarly, a vertex is good if the XOR of its adjacent edge weights is not equal to its own weight. Find the number of ways to assign weights such that all vertices and edges are good.", "Codeforces1893E"], ["You have $n$ colored cubes. You need to distribute them among $m$ shelves, each with a certain capacity. Each shelf must have a minimum colorfulness, which is the minimum distance between two cubes of the same color. You need to find a way to distribute the cubes that satisfies the minimum colorfulness requirements for all shelves, or determine that it is impossible.", "Codeforces1893D"], ["You have $n$ colored cubes and $m$ shelves with different capacities. You need to distribute the cubes on the shelves in such a way that each shelf meets a minimum color requirement. The color requirement is the minimum distance between two cubes of the same color on a shelf. If it's not possible to distribute the cubes to meet the color requirements, indicate that it is impossible.", "Codeforces1893D"], ["Given a set of multisets with distinct elements and their respective frequencies, choose a specific number of elements from each multiset within given bounds. The goal is to minimize the occurrence of a specific number in the resulting multiset.", "Codeforces1893C"], ["You are given multiple multisets. Each multiset has distinct numbers with their corresponding frequencies. You can choose a specific number of elements from each multiset and add them to a new multiset called $X$. Your goal is to minimize the occurrence of the maximum number in $X$.", "Codeforces1893C"], ["You are given two arrays of integers, $a$ and $b$. Find the best way to insert the numbers from $b$ into $a$ to create a new array $c$. The goal is to minimize the length of the longest increasing subsequence in $c$.", "Codeforces1893B"], ["Given two arrays $a$ and $b$ of integers, we want to insert the elements of array $b$ into array $a$ in order to minimize the length of the longest increasing subsequence in the resulting array.", "Codeforces1893B"], ["Given an array $b_1, b_2, \\ldots, b_n$, check if it is possible to obtain this array by performing a series of cyclic left shifts on an initial array $a_1, a_2, \\ldots, a_n$, where each shift is determined by a fixed point $x$ in $a$ and is performed $x$ times.", "Codeforces1893A"], ["Given an array $b_1, b_2, \\ldots, b_n$, determine if it is possible to obtain this array by repeatedly choosing a fixed point $x$ in an array $a$ and cyclically shifting $a$ to the left $x$ times.", "Codeforces1893A"], ["You have a tree and a number assigned to each vertex. You need to perform two types of queries:\n1. Add a new vertex as a child to a given vertex, with a new number.\n2. Add a given number to the numbers of all vertices in the subtree of a given vertex.\nAfter all queries, find the final numbers assigned to all vertices.", "Codeforces1891F"], ["Given a rooted tree, initially with a single vertex having a value of 0. There are two types of queries: \n1. Add a child vertex with a value of sz+1 to a given vertex v, where sz is the current size of the tree.\n2. Add a given value x to the values of all vertices in the subtree of a given vertex v. \nOutput the final values of all vertices after all queries are executed.", "Codeforces1891F"], ["Given $n$ exams with known difficulty levels $a_i$ (non-negative integers), determine the minimum number of pairs of exams where the greatest common divisor (gcd) of their difficulties is equal to $1$. Optionally, we can change the difficulty of up to $k$ exams to $0$ in order to minimize this number.", "Codeforces1891E"], ["Given a sequence of $n$ non-negative integers representing the difficulties of exams, we want to minimize the number of pairs of consecutive exams with a greatest common divisor of 1. We can reduce this count by setting the difficulty of any exam to 0, but we are limited to performing this action at most $k$ times. Find the minimum possible count of such pairs.", "Codeforces1891E"], ["Given an integer range $[l, r]$, calculate the sum of $g(k)$ for all $k$ in the range, where $g(k)$ is the floor of the logarithm of $k$ with base $f(k)$.", "Codeforces1891D"], ["Given $q$ queries of the form $(l_i, r_i)$, where $l_i$ and $r_i$ are integers, find the sum of $g(k)$ for all integers $k$ such that $l_i \\leq k \\leq r_i$. Here, $g(x)$ is defined as the largest non-negative integer $z$ such that ${\\lfloor \\log_2(x) \\rfloor}^z$ does not exceed $x$. Output the sum modulo $10^9 + 7$.", "Codeforces1891D"], ["You are given $n$ hordes of monsters, each containing a certain number of monsters. You have two types of attacks:\n  - Attack 1: Kill one monster from a horde, and increase a combo counter $x$ by $1$.\n  - Attack 2: Use an ultimate attack to kill $x$ monsters from a horde, and reset $x$ to $0$.\nYour goal is to destroy all the monsters with the minimum number of attacks.", "Codeforces1891C"], ["You have $n$ hordes of monsters. You can either kill one monster from a horde (increasing a combo counter), or use an ultimate attack to kill as many monsters as the combo counter (resetting the combo counter to zero). Your goal is to destroy all the monsters using the minimum number of attacks.", "Codeforces1891C"], ["Given an array of positive integers $a$ of length $n$ and an array of positive integers $x$ of length $q$, perform $q$ modifications on $a$. In each modification, for each element $a_j$ of $a$ that is divisible by $2^{x_i}$, add $2^{x_i-1}$ to $a_j$. Finally, output the final array after all modifications.", "Codeforces1891B"], ["Given an array $a$ of positive integers and an array $x$ of positive integers, apply a series of modifications to $a$. On each modification, if an element in $a$ is divisible by $2^{x_i}$, add $2^{x_i-1}$ to that element. Output the final array after all modifications.", "Codeforces1891B"], ["You are given an array of integers. You can choose a non-negative integer $m$ and subtract $1$ from the first $2^m$ integers in the array. Can you sort the array in non-decreasing order by performing some number of operations?", "Codeforces1891A"], ["Given an array of integers, you can perform operations by subtracting $1$ from certain elements. Is it possible to sort the array in non-decreasing order using these operations?", "Codeforces1891A"], ["Given two strings $s$ and $t$ containing only $\\texttt{0}$ and $\\texttt{1}$, determine if it is possible to make $s$ a \"good\" string by inserting $t$ into $s$ at any position. A string $a$ is \"good\" if and only if no consecutive pair of characters in $a$ are the same.", "Codeforces1890B"], ["Given two strings $s$ and $t$ containing only the characters $0$ and $1$, determine if it is possible to make $s$ a \"good\" string by inserting $t$ into any position of $s$. A string $a$ of length $k$ is considered \"good\" if and only if adjacent characters in $a$ are different, i.e., $a_i \\neq a_{i+1}$ for all $i=1,2,\\ldots,k-1$.", "Codeforces1890B"], ["Given an array $a$ of positive integers, determine if it is possible to rearrange the elements such that all the sums of two adjacent elements are equal.", "Codeforces1890A"], ["Given an array $a$ of positive integers of length $n$, determine if it can be rearranged to form a good array, where all the sums of adjacent elements are equal.", "Codeforces1890A"], ["You are given a rooted tree with $n$ vertices and a number $w_i$ written on each vertex. You can perform the following operation at most $k$ times: \nChoose a vertex $x$ and compute the average $s$ of the numbers written on all vertices in the subtree rooted at $x$. Update all numbers in the subtree to be equal to $s$. \nYou need to find the lexicographically smallest array $w$ that can be obtained after performing these operations.", "Codeforces1889F"], ["Given a rooted tree with $n$ vertices and weights assigned to each vertex, Doremy can perform an operation at most $k$ times. In each operation, she chooses a vertex $x$ and assigns the average weight of its subtree to all vertices in the subtree. The goal is to find the lexicographically smallest possible array of weights after performing all the operations.", "Codeforces1889F"], ["Given two trees $T_1$ and $T_2$ with $n$ labeled nodes. You can perform the following operation:\n \n1) Choose a set of edges $E_1$ from $T_1$ and a set of edges $E_2$ from $T_2$ such that the induced subgraphs $\\overline{E_1}$ and $\\overline{E_2}$ are similar.\n2) Swap the sets of edges $E_1$ and $E_2$ between $T_1$ and $T_2$.\n\nFind the number of distinct $T_1$ that can be obtained after performing any number of operations, modulo $10^9+7$.", "Codeforces1889E"], ["Given two trees $T_1$ and $T_2$ with $n$ labeled nodes. We can perform the following operation any number of times: \n- Choose a set of edges $E_1$ from $T_1$ and a set of edges $E_2$ from $T_2$ such that the remaining trees $\\overline{E_1}$ and $\\overline{E_2}$ are similar (as defined in the problem). \n- Swap the chosen edge sets $E_1$ in $T_1$ with $E_2$ in $T_2$. \n\nDetermine the number of distinct trees $T_1$ that can be obtained after any number of operations. The answer should be given modulo $10^9+7$.", "Codeforces1889E"], ["You are given $n$ stacks, each containing positive integers from $1$ to $n$. With the given functions, $\\text{init}$ and $\\text{get}$, you need to determine the values returned by $\\text{init}(1), \\text{init}(2), \\ldots, \\text{init}(n)$. The stacks remain unchanged during these calls.", "Codeforces1889D"], ["Given $n$ stacks, each containing positive integers from $1$ to $n$, we want to determine the values returned by calling the function $\\texttt{init(pos)}$ for each position $1 \\leq \\texttt{pos} \\leq n$. The $\\texttt{init(pos)}$ function returns the first non-empty stack encountered when following a chain of pointers starting from $\\texttt{pos}$.", "Codeforces1889D"], ["Given $n$ cities and a weather forecast for the next $m$ days, determine the maximum number of cities that can be made dry by selecting $k$ days on which it will not rain.", "Codeforces1889C2"], ["Find the maximum number of dry cities that can be achieved by choosing $k$ days where it does not rain, given the rain distribution in $n$ cities over $m$ days.", "Codeforces1889C2"], ["You are given $n$ cities numbered from $1$ to $n$, and information about where it will rain in the next $m$ days. You have the power to choose $k$ days (in the easy version, $k = 2$) where it will not rain. Your goal is to determine the maximum number of cities that will never experience rain after using your power.", "Codeforces1889C1"], ["Given $n$ cities and $m$ days, determine the maximum number of cities that will never experience rain over the course of $m$ days. You have the power to choose $k$ days where it will not rain. Find the maximum number of dry cities after using this power.", "Codeforces1889C1"], ["Given $n$ cities, each with a certain number of people, we want to create a connected graph by adding edges between cities. An edge can be added between city $i$ and city $j$ if the sum of the populations of all cities in the same connected component as $i$ or $j$ is greater than or equal to $i \\cdot j \\cdot c$. The goal is to determine if it is possible to make the graph connected using these conditions.", "Codeforces1889B"], ["Given a set of cities, each with a certain number of people, we want to connect all the cities together. We can add an edge between two cities if the sum of the people in the connected group of cities is greater than or equal to the product of the cities' indices times a constant. Can we make all the cities connected?", "Codeforces1889B"], ["Given a string $s$ containing only $0$'s and $1$'s, determine if it is possible to make $s$ good by performing the following operation:\n- Insert the substring $\"01\"$ at any position in $s$.\n\nIf it is possible, provide a sequence of operations that makes $s$ good.", "Codeforces1889A"], ["Given a string $s$ consisting of only $\\texttt{0}$s and $\\texttt{1}$s, determine if it is possible to make $s$ good. If possible, provide a sequence of operations that makes $s$ good. The operation involves inserting $\\texttt{01}$ at any position in $s$.", "Codeforces1889A"], ["Given a sequence $r_1, r_2, \\ldots, r_n$ of integers from $1$ to $n+1$, we want to determine whether there exists a sequence $a_1, a_2, \\ldots, a_n$ which satisfies the following condition:\n\nFor each $i \\in [1, n]$, there exists a smallest index $j \\ge i$ such that on the subsequence $a_i, a_{i+1}, \\ldots, a_j$ all distinct numbers from the sequence $a$ appear. If such $j$ does not exist, the value of $r_i$ is $n+1$.", "Codeforces1887F"], ["Given a sequence of integers from 1 to n, not necessarily distinct, the goal is to find a sequence of integers that satisfies a certain characteristic. The characteristic is defined as the smallest index j, for each index i from 1 to n, such that all distinct numbers from the sequence appear in the subsegment from ai to aj. In other words, we want to reconstruct the original sequence based on its characteristic, or determine if the characteristic is erroneous and no such sequence exists.", "Codeforces1887F"], ["You are given a $n \\times n$ grid sheet. Out of the $2n$ cells colored by Alice, find a set of four colored cells that form a rectangle, with each cell having a different color.", "Codeforces1887E"], ["Given a grid of size $n \\times n$, $2n$ cells are colored with different colors. Bob needs to find a set of four cells that form a rectangle and are colored with different colors within 10 moves.", "Codeforces1887E"], ["Given an array of distinct integers from $1$ to $n$, determine whether a subarray $a_l, a_{l+1}, \\ldots, a_r$ is good. The subarray is considered good if it can be split into two parts such that all elements in the left part are strictly smaller than all elements in the right part.", "Codeforces1887D"], ["Given an array of distinct integers from 1 to $n$ and $q$ queries, each represented by a range $l$ to $r$, determine if the subarray from $a_l$ to $a_r$ can be split into two parts such that all elements in the left part are strictly smaller than all elements in the right part.", "Codeforces1887D"], ["Given an array $a$ of length $n$ consisting of integers, perform $q$ operations on it. Each operation involves choosing indices $l$ and $r$ and an integer $x$, and then adding $x$ to all elements of $a$ in the segment $[l, r]$. Find the lexicographically smallest array among all arrays obtained after applying the operations.", "Codeforces1887C"], ["Given an array $a$ of length $n$ consisting of integers, we perform $q$ operations on it. Each operation involves choosing indices $l$ and $r$ ($1 \\le l \\le r \\le n$) and an integer $x$, and adding $x$ to all elements in the segment $[l, r]$. We need to find the lexicographically smallest array $b_j$ that results from these operations.", "Codeforces1887C"], ["There are $n$ cities in the country Berland. You have records of $t$ key moments in history, each containing a list of roads between cities. You have a time machine that transports you between these moments. Given a specific order of moments, find the minimum number of time travels needed to go from city $1$ to city $n$, assuming you can only use one road when you arrive at a new moment.", "Codeforces1887B"], ["Given a country with $n$ cities and $t$ key moments in its history, find the minimum number of time travels needed to reach city $n$ starting from city $1$, using the specified order of time travels.", "Codeforces1887B"], ["You are given $n$ cameras, each with two parameters $(t_i, s_i)$. The first parameter $t_i$ tells us what the camera is monitoring - the first diamond ($t_i=1$), the second diamond ($t_i=2$), or both diamonds ($t_i=3$). The second parameter $s_i$ tells us how long the camera will be disabled after being hacked.\n\nYou need to find the minimum time it will take to steal both diamonds in the correct order, or determine if it is impossible.", "Codeforces1886F"], ["You need to find the minimum time it will take to steal two diamonds. There are cameras monitoring the diamonds, each with two parameters: $t_i$ and $s_i$. $t_i$ determines which diamond the camera is monitoring (1 for first, 2 for second, and 3 for both), and $s_i$ is the number of seconds the camera will be disabled after being hacked. You can either do nothing, hack a camera to disable it, or steal a diamond if all cameras monitoring it are disabled. You cannot steal the second diamond before stealing the first.", "Codeforces1886F"], ["Given $m$ projects with difficulty levels $b_i$ and $n$ programmers with stress tolerance levels $a_j$, find an assignment of programmers to projects such that each programmer is assigned to at most one project, each project has at least one programmer assigned to it, and if $k$ programmers are assigned to the $i$-th project, then the stress tolerance level of each assigned programmer is greater than or equal to $\\frac{b_i}{k}$.", "Codeforces1886E"], ["You are given a set of projects and a set of programmers. Each project has a difficulty level, and each programmer has a stress tolerance level. You need to assign the programmers to the projects in such a way that each programmer is assigned to exactly one project and each project has at least one assigned programmer. The assigned programmers for a project must have a stress tolerance level greater than or equal to the difficulty level of the project divided by the number of assigned programmers. Find any valid assignment.", "Codeforces1886E"], ["Monocarp adds numbers from $1$ to $n$ to a set one by one, in a specific order. Each time he adds a number, he writes a character based on whether the number becomes the maximum, minimum, or neither in the set. \nYou are given a string representing the characters written by Monocarp. You need to process some queries to replace certain characters in the string. \nBefore and after each query, you need to calculate the number of different ways to order the numbers from $1$ to $n$, such that if Monocarp adds them in that order, he gets the given string. Print the answers modulo $998244353$.", "Codeforces1886D"], ["Given a string $s$ consisting of $n-1$ characters, and $m$ queries in the format $i$ $c$, the task is to calculate the number of different ways to order the integers $1, 2, 3, \\dots, n$ such that inserting them into a set in that order produces the string $s$. Print the answers modulo $998244353$.", "Codeforces1886D"], ["Given a sequence of strings $s_1, s_2, \\dots, s_n$, where each string is formed by removing a character from the previous string in a way that ensures lexicographical minimization, we need to find the character in position $pos$ of the concatenated string $S$.", "Codeforces1886C"], ["Given a sequence of strings $s_1, s_2, \\dots, s_n$ where each string is generated by removing a character from the previous string in a way that maintains lexicographical order, find the character at position $pos$ in the concatenated string $S$.", "Codeforces1886C"], ["Given two points $O = (0, 0)$ and $P = (P_x, P_y)$ on a two-dimensional plane, and two lanterns $A = (A_x, A_y)$ and $B = (B_x, B_y)$, find the minimum non-negative value $w$ such that setting the power of both lanterns to $w$ illuminates a path from $O$ to $P$.", "Codeforces1886B"], ["Given a two-dimensional plane with points $O$, $P$, $A$, and $B$, find the minimum non-negative value $w$ such that setting the power of both lanterns to $w$ illuminates a path from point $O$ to point $P$.", "Codeforces1886B"], ["Given an integer $n$, we need to find three distinct positive numbers $x$, $y$, and $z$ such that none of them are divisible by $3$, or report that no such numbers exist.", "Codeforces1886A"], ["Find three distinct positive integers $x$, $y$, and $z$, such that none of them is divisible by $3$. If no such triplet exists, report that it is not possible.", "Codeforces1886A"], ["Consider an array of integers. The goal is to make all its elements equal. You can perform the following operation:\n\nPick a pair of indices $l \\leq r$ and increase each element in the range $l$ to $r$ by $1$.\nAfter each operation, you receive $(r - l + 1)^2$ coins.\n\nThe value $f(b)$ is defined as the minimum number of operations required to make all elements equal and the maximum total number of coins you can receive among all possible ways to make all elements equal within $f(b)$ operations.\n\nGiven an array of integers, find the value of $f$ for all cyclic shifts of the array.", "Codeforces1884E"], ["Given an array of integers $a_0, a_1, \\ldots, a_{n-1}$, calculate the value of $f(b)$ for all cyclic shifts of $a$. The value of $f(b)$ is the smallest number of operations required to make all elements of the array equal, and the largest total number of coins you can receive among all possible ways to make all elements equal within the given number of operations.", "Codeforces1884E"], ["Given an array of integers $a_1, a_2, \\ldots, a_n$, find the number of pairs $(i, j)$ such that $1 \\le i < j \\le n$, and there does not exist an integer $k$ $(1 \\le k \\le n)$ such that $a_i$ is divisible by $a_k$ and $a_j$ is divisible by $a_k$ at the same time.", "Codeforces1884D"], ["Given an array of integers, find the number of pairs of integers such that there is no other integer in the array that divides both elements of the pair.", "Codeforces1884D"], ["Given an array $a$ of length $m$ initially filled with zeroes, and $n$ segments with start and end indices ($l_i$ and $r_i$ respectively), select a subset of segments (including the possibility of selecting none). For each selected segment, increase the values in the array from index $l_i$ to $r_i$ by $1$. Find the maximum difference between the maximum and minimum values in the array after all segments have been processed.", "Codeforces1884C"], ["Given an array of length $m$ filled with zeroes, and $n$ pairwise distinct segments $[l_i, r_i]$ where $1 \\leq l_i \\leq r_i \\leq m$, find the maximum possible difference between the maximum and minimum values in the array after selecting an arbitrary subset of segments and incrementing the values in the selected segments by 1.", "Codeforces1884C"], ["You are given a binary number with $n$ bits. You can swap any two adjacent bits. Find the smallest number of swaps needed to make the number divisible by $2^i$.", "Codeforces1884B"], ["Given a binary number with $n$ bits, find the minimum number of adjacent bit swaps required to make the number divisible by $2^i$, where $1 \\leq i \\leq n$.", "Codeforces1884B"], ["Given two positive integers $x$ and $k$, find the smallest integer $y$ greater than or equal to $x$ such that the sum of its digits is divisible by $k$.", "Codeforces1884A"], ["Given two positive integers $x$ and $k$, find the smallest integer $y$ such that the sum of its digits is divisible by $k$, and $y \\geq x$.", "Codeforces1884A"], ["Given $n$ pairs of arrays $a$ and $b$ of size $n$, the task is to reorder the elements of each array to minimize the number of operations required to satisfy $a_i < b_i$ for all $1 \\leq i \\leq k$. Each operation involves removing an element from both arrays. Additionally, for a given positive integer $m$, compute the sum of the minimum number of operations required for $m$ pairs of arrays $(c[i], b)$, where $c[i]$ is derived from array $a$ with the first element replaced by $i$.", "Codeforces1883G2"], ["Given two arrays of integers $a$ and $b$, we want to reorder the arrays such that for every index $i$, $a_i < b_i$. We can perform the following operation: choose an element from array $a$ and remove it, and simultaneously choose an element from array $b$ and remove it. Find the minimum number of operations required to satisfy the inequality for all indices $i$. Additionally, given a positive integer $m$, find the sum of answers to the problem for $m$ pairs of arrays $(c[i], b)$, where $c[i]$ is obtained from $a$ by replacing its first element with $i$. The maximum value of $m$ is $10^9$.", "Codeforces1883G2"], ["Given two arrays of integers $a$ and $b$ of length $n$, we want to reorder the elements of both arrays to minimize the number of operations needed to satisfy the condition $a_i < b_i$ for all $i$. Each operation allows us to remove one element from each array. We need to find the minimum number of operations needed for $m$ pairs of arrays $(c[i], b)$, where $c[i]$ is obtained from $a$ by replacing the first element with $i$. Ultimately, we need to calculate the sum of these minimum numbers of operations for all pairs.", "Codeforces1883G1"], ["Given two arrays of integers $a$ and $b$, find the minimum number of operations needed to make $a_i < b_i$ for all $i$. You can reorder the elements of each array and perform operations on pairs of elements. Additionally, for $m$ pairs of arrays, obtain a new array $c$ by placing the index $i$ as the first element, and determine the sum of the minimum number of operations for each pair of arrays $(c[i], b)$.", "Codeforces1883G1"], ["Given an array of integers $a_1, a_2, \\ldots, a_n$, find the number of subarrays such that the subarray occurs exactly once as a subsequence in the array.", "Codeforces1883F"], ["Given an array of integers, calculate the number of subarrays such that the elements in the subarray occur in the array exactly once as a subsequence.", "Codeforces1883F"], ["Given an array of integers $a_1, a_2, \\ldots, a_n$, find the minimum number of operations required to make it non-decreasing, where each operation involves multiplying an element of the array by 2.", "Codeforces1883E"], ["Given an array of integers, the task is to modify it such that it becomes non-decreasing with the minimum number of operations. In each operation, a single element of the array can be multiplied by 2.", "Codeforces1883E"], ["You have an empty set of segments. You perform $q$ operations of two types: adding a segment $(l, r)$ to the set, or removing a segment $(l, r)$ from the set. After each operation, you need to determine if there exists a pair of segments in the set that do not intersect. A pair of segments $(l, r)$ and $(a, b)$ do not intersect if there are no common points between them.", "Codeforces1883D"], ["Given an empty multiset of segments, we perform two types of operations: \n1. Add a segment $(l, r)$ to the multiset.\n2. Remove one segment $(l, r)$ from the multiset.\nAfter each operation, we need to determine if there exists a pair of segments in the multiset that do not intersect. Two segments do not intersect if there is no point $x$ that lies within both segment ranges.", "Codeforces1883D"], ["Given an array of integers and a number, find the minimum number of operations needed to make the product of all the numbers in the array divisible by the given number.", "Codeforces1883C"], ["Given an array of integers $a_1, a_2, \\ldots, a_n$ and a number $k$, find the minimum number of operations needed to make the product of all the numbers in the array divisible by $k$.", "Codeforces1883C"], ["Given a string $s$ of length $n$ consisting of lowercase letters and an integer $k$, determine if it is possible to remove exactly $k$ characters from $s$ such that the remaining characters can be rearranged to form a palindrome.", "Codeforces1883B"], ["Given a string $s$ of lowercase letters and an integer $k$, determine if it is possible to remove exactly $k$ characters from $s$ in such a way that the remaining characters can be rearranged to form a palindrome.", "Codeforces1883B"], ["You are given a four-digit pin code. The pin pad shows digits from $0$ to $9$. The cursor starts pointing at the digit $1$. Each second, you can either press the current digit or move the cursor to an adjacent digit. Find the minimum number of seconds required to enter the pin code.", "Codeforces1883A"], ["Given a four-digit pin code consisting of digits from $0$ to $9$, and a device for entering the pin code, find the minimum number of seconds required to enter the pin code. The device has a cursor that starts at digit $1$ and in one second, you can either display the current digit or move the cursor to an adjacent digit.", "Codeforces1883A"], ["You are given two permutations, $p$ and $q$, of length $n$ and $m$ respectively. Your task is to transform both permutations such that $p_i = i$ for $i=1,2,\\ldots,n$ and $q_j = j$ for $j=1,2,\\ldots,m$. You can do this by repeatedly swapping elements of $p$ and $q$ in a specific way. Find the minimum number of swaps needed to achieve the goal, or determine if it is impossible.", "Codeforces1882E2"], ["Given two permutations, $p$ and $q$, of lengths $n$ and $m$ respectively, we want to transform both permutations into the identity permutation (where all elements are in ascending order from $1$ to $n$ or $m$) using the minimum number of operations. Each operation involves choosing two indices $i$ and $j$, swapping the left and right parts of the partition around index $i$ in $p$, and swapping the corresponding partition around index $j$ in $q$.", "Codeforces1882E2"], ["You are given two permutations of length $n$ and $m$. Your goal is to transform both permutations such that the first permutation becomes $[1, 2, \\ldots, n]$ and the second permutation becomes $[1, 2, \\ldots, m]$. You can perform an operation that swaps two parts of a permutation. Find a way to achieve the goal using at most $10,000$ operations, or determine if it's impossible.", "Codeforces1882E1"], ["Given two permutations $p$ and $q$ of length $n$ and $m$ respectively, we want to transform $p$ and $q$ such that $p_i = i$ and $q_j = j$ for all $i$ and $j$. We can perform the following operation multiple times: choose indices $i$ and $j$, then swap the left and right parts of $p$ and $q$ with $p_i$ and $q_j$ as pivots. Find a way to achieve the goal using at most 10,000 operations, or determine if it is not possible.", "Codeforces1882E1"], ["Given a tree with $n$ vertices labeled from $1$ to $n$, and an integer $a_{i}$ on each vertex $i$. We want to make all $a_{i}$ equal by performing spells, where each spell involves selecting a vertex $v$ and a non-negative integer $c$. For every vertex $i$ in the subtree of $v$, we replace $a_{i}$ with $a_{i} \\oplus c$. The cost of a spell is $s \\cdot c$, where $s$ is the number of vertices in the subtree. Find the minimum total cost required to make all $a_i$ equal for each vertex $i$.", "Codeforces1882D"], ["Given a tree with $n$ vertices labeled from $1$ to $n$, where each vertex $i$ has an integer $a_i$ written on it. The goal is to make all $a_i$ equal by performing spells. On each spell, choose a vertex $v$ and a non-negative integer $c$. Then, replace $a_i$ with $a_i \\oplus c$ for all vertices $i$ in the subtree of $v$. The cost of a spell is $s \\cdot c$, where $s$ is the number of vertices in the subtree. Find the minimum total cost $m_r$ required to make all $a_i$ equal, when vertex $r$ is chosen as the root of the tree.", "Codeforces1882D"], ["You have a deck of cards with numbers on them. Your goal is to maximize your score by choosing cards from the deck and adding their numbers to your score. You can either choose an odd card and add its number to your score, or remove an even card without adding its number to your score. You can end the game whenever you want. What is the maximum score you can achieve?", "Codeforces1882C"], ["Given a stack of $n$ cards with values $a_i$, remove cards one by one in the following way:\n- For an odd $i$, remove the $i$-th card and add its value to the score.\n- For an even $i$, just remove the $i$-th card.\nThe goal is to maximize the total score.", "Codeforces1882C"], ["Given $n$ sets of integers $S_{1}, S_{2}, \\ldots, S_{n}$, find the largest possible number of elements in a set $S$ such that $S$ cannot be obtained by taking the union of any subset of $S_{1}, S_{2}, \\ldots, S_{n}$.", "Codeforces1882B"], ["Given $n$ sets of integers $S_{1}, S_{2}, \\ldots, S_{n}$, find the size of the largest attainable set $S$ that is not equal to $S_{1} \\cup S_{2} \\cup \\ldots \\cup S_{n}$.", "Codeforces1882B"], ["Given a sequence $a_1, a_2, \\ldots, a_n$, find the minimum value of the last element $b_n$ in a good sequence $b_1, b_2, \\ldots, b_n$. A good sequence satisfies the following conditions: $b_i$ is a positive integer for $i = 1,2,\\ldots,n$, $b_i \\neq a_i$ for $i = 1,2,\\ldots,n$, and $b_1 < b_2 < \\ldots < b_n$.", "Codeforces1882A"], ["Given a sequence $a_1, a_2, \\ldots, a_n$, find the minimum positive integer $b_n$ such that $b_i \\neq a_i$ for all $i$, and $b_1 < b_2 < \\ldots < b_n$.", "Codeforces1882A"], ["You are given a string $s$ consisting of lowercase letters, and an instruction set. The instruction set includes two types of queries:\n\n1. Add a number $x$ to a substring $[l \\ldots r]$ of $s$.\n2. Check if a substring $[l \\ldots r]$ of $s$ is beautiful, i.e., it does not contain any palindromes of length at least two.\n\nYou need to answer $m$ queries of these two types.", "Codeforces1881G"], ["We are given a string $s$ of length $n$ containing lowercase letters. We need to answer $m$ queries. The queries can be of two types:\n \n1. Add an integer $x$ to the substring $[l \\ldots r]$ of string $s$. \n2. Determine whether the substring $[l \\ldots r]$ of string $s$ is beautiful.\n\nWe need to simplify the statement and remove any unnecessary details or examples.", "Codeforces1881G"], ["You have a tree with $n$ vertices, some of which are marked. Your task is to find the vertex with the minimum maximum distance to any of the marked vertices.", "Codeforces1881F"], ["You have a tree with some marked vertices. Find the minimum distance from any vertex to a marked vertex.", "Codeforces1881F"], ["Given a sequence of integers $a$ of length $n$, find the minimum number of operations required to transform the sequence into a beautiful sequence. A beautiful sequence consists of blocks, where each block starts with its length followed by its elements. In each operation, one element can be removed from the sequence.", "Codeforces1881E"], ["Given a sequence of integers, find the minimum number of operations required to make the sequence beautiful where a beautiful sequence consists of blocks, each starting with its length and then its elements. In each operation, you can remove any element from the sequence.", "Codeforces1881E"], ["Given an array of positive integers, we can perform the following operation: choose two elements $a_i$ and $a_j$ from the array, and replace $a_i$ with one of its divisors while replacing $a_j$ with $a_j$ multiplied by the chosen divisor. The goal is to determine if it is possible to make all elements in the array the same.", "Codeforces1881D"], ["Given an array of positive integers, determine whether it is possible to make all elements in the array the same by performing a certain number of operations. The operation involves choosing a pair of elements and replacing one element with a divisor of the other element, while multiplying the other element by the chosen divisor.", "Codeforces1881D"], ["Given an $n \\times n$ matrix filled with lowercase Latin letters, where $n$ is even, we want to transform the matrix into a perfect square. A perfect square matrix remains unchanged when rotated $90^\\circ$ clockwise. We can perform operations to change the letters by replacing them with the next character in the alphabet. We need to determine the minimum number of operations required to achieve a perfect square matrix.", "Codeforces1881C"], ["Given a matrix of size $n$ by $n$ filled with lowercase Latin letters, where $n$ is even, find the minimum number of operations required to change some characters in the matrix so that it becomes a perfect square. In each operation, a character can be replaced with the next character in the alphabet, unless it is already \"z\".", "Codeforces1881C"], ["Given three positive integers $a, b, c$ such that $a \\geq b \\geq c$, can we find three positive integers $x, y, z$ such that $x+y = a, y+z = b, x+z = c$?", "Codeforces1881B"], ["Given three threadlets and a pair of scissors, Decim can perform at most three operations to cut the threadlets into two threadlets each time. He wants to know if it is possible to make all the threadlets have the same length.", "Codeforces1881B"], ["Given strings $x$ and $s$ consisting of lowercase Latin letters, the goal is to find the minimum number of operations to append $x$ to itself such that $s$ appears as a substring in the resulting string. The length of $x$ is $n$ and the length of $s$ is $m$. The product of $n$ and $m$ is at most $25$.", "Codeforces1881A"], ["Given strings $x$ and $s$, find the minimum number of operations needed so that $s$ appears as a substring of $x$.", "Codeforces1881A"], ["Given $n$ heroes with initial health $h$ and armor $a$, find the maximum number of points each hero can earn in a game. In each game, a positive integer $x$ is chosen, and all heroes are attacked with $x$ points of damage per round. If a hero's armor is greater than $x$, the armor is reduced by $x$. Otherwise, the hero's health is reduced by 1 and the armor is reset to its initial value. The game ends when all heroes are dead. The last hero to die earns points equal to the number of rounds in which they were the only hero alive.", "Codeforces1879F"], ["There are $n$ heroes in a videogame. Each hero has health $h$ and initial armor $a$. You choose a value $x$ and attack the heroes in rounds, inflicting $x$ damage to each alive hero. If an alive hero's armor is reduced to zero, they lose one health. The game ends when all heroes are dead. The last hero to die earns points equal to the number of rounds they were the only hero alive. What is the maximum number of points each hero can earn?", "Codeforces1879F"], ["You are given a tree with $n$ vertices and vertex 1 is the root. Every vertex $i$ where $i \\in [2, n]$ has a parent $p_i$ such that $p_i < i$. Your task is to color all edges of the tree using the minimum number of colors possible. After coloring, you will play a game where a chip is placed on a vertex (except the root) and you need to move it to the root in exactly $d$ moves, where $d$ is the distance from the root to the starting vertex. In each move, you are told the number of edges of each color incident to the current vertex, and you must choose one color for the chip to move along. The game continues until the chip reaches the root or you make $d$ moves without reaching the root.", "Codeforces1879E"], ["Given a tree with $n$ vertices, color the edges using the minimum number of colors such that you can win a game. In the game, a chip is placed on a vertex (except for the root) and you need to move the chip to the root in a certain number of moves. On each move, you are told the number of edges of each color incident to the current vertex and you choose one color to move the chip along. You win if the chip reaches the root in the specified number of moves, otherwise you lose. You do not know the starting vertex or the number of moves in advance.", "Codeforces1879E"], ["Given an array of non-negative integers $a$ of length $n$, calculate the value of $\\sum_{l=1}^{n} \\sum_{r=l}^{n} f(l, r) \\cdot (r - l + 1)$, where $f(l, r)$ is the bitwise XOR of the subarray $a_l$ to $a_r$. Print the answer modulo $998244353$.", "Codeforces1879D"], ["Given an array $a$ of non-negative integers, calculate the value of $\\sum_{l=1}^{n} \\sum_{r=l}^{n} f(l, r) \\cdot (r - l + 1)$ modulo $998244353$, where $f(l, r)$ is the bitwise XOR of the elements from index $l$ to index $r$ in the array.", "Codeforces1879D"], ["You are given a binary string $s$ and your task is to make it alternating. You can remove any character from $s$ any number of times. Find the minimum number of removal operations needed to make $s$ alternating, and also determine the number of different shortest sequences of removal operations to achieve this.", "Codeforces1879C"], ["Given a binary string, find the minimum number of operations required to make it alternating, i.e., every two adjacent characters should be different. Additionally, determine the number of different shortest sequences of operations that achieve this.", "Codeforces1879C"], ["You are given an $n \\times n$ board and two arrays $a$ and $b$, each of size $n$. Your task is to place chips on the board such that for every cell $(i, j)$, there is at least one chip in the same row or column as that cell. The cost of placing a chip in cell $(i, j)$ is $a_i + b_j$. Find the minimum possible total cost of placing chips on the board.", "Codeforces1879B"], ["You are given a board of size n x n and two arrays of positive integers a and b of size n. Find the minimum cost of placing chips on the board such that every cell has at least one chip in the same row or column as it. The cost of placing a chip in a cell (i, j) is given by a[i] + b[j].", "Codeforces1879B"], ["You are given the strengths and endurance values of $n$ athletes. Each athlete can lift a barbell equal to their strength, and the number of times they can lift it is equal to their endurance. You need to find a positive integer $w$ such that the first athlete (Polycarp) can lift the barbell more times than any other athlete. If there is no such $w$, report that it is impossible.", "Codeforces1879A"], ["Given an array of integers representing the strength and endurance of athletes, the task is to find a positive integer $w$ such that the first athlete can lift the barbell more times than any other athlete. If there are multiple such integers, output any of them. If it is impossible, report that there is no solution.", "Codeforces1879A"], ["You are given a tree with $n$ vertices and $n-1$ edges. Each vertex has a value. You need to find the maximum niceness among all vertices on the shortest path between two given vertices. Niceness is determined by counting the number of non-zero bits in the bitwise OR of the values along the path from one vertex to another.", "Codeforces1878G"], ["Given a tree with $n$ vertices and $n-1$ edges, each vertex $i$ has a value $a_i$. We want to find the maximum \"niceness\" among all vertices $z$ on the shortest path from vertex $x$ to vertex $y$. The \"niceness\" of a vertex is the sum of the number of non-zero bits in the bitwise OR of the values of vertex $x$ and vertex $z$, and the bitwise OR of the values of vertex $y$ and vertex $z$.", "Codeforces1878G"], ["Given a positive integer $n$, we have two types of queries:\n1. Multiply $n$ by a positive integer $x$ and determine if there exists a positive integer $a$ such that the greatest common divisor of $a$ and $n$ is $1$, and the number of positive integer divisors of $na$ is equal to $n$.\n2. Reset $n$ to its original value.\n\nThe goal is to solve these queries efficiently, with the constraint that the number of positive integer divisors of $n$ is always less than or equal to $10^9$.", "Codeforces1878F"], ["Given a positive integer n, we are given two types of queries:\n1) Multiply n by x and check if there exists a positive integer a such that gcd(a, n) = 1 and d(n * a) = n.\n2) Reset n to its initial value.\nThe goal is to solve these queries efficiently, where the number of divisors of n (d(n)) is less than or equal to 10^9.", "Codeforces1878F"], ["Given an array $a$ of $n$ elements, and $q$ queries. Each query consists of two numbers, $k$ and $l$. Find the largest index $r$ ($l \\le r \\le n$) such that the bitwise AND of all elements from index $l$ to index $r$ is greater than or equal to $k$.", "Codeforces1878E"], ["Given an array $a$ of $n$ elements and $q$ queries of the form $(k, l)$, find the largest index $r$ ($l \\le r \\le n$) such that the bitwise AND of the subarray $a[l:r]$ is greater than or equal to $k$.", "Codeforces1878E"], ["Given a string $s$ of lowercase Latin letters with length $n$, two arrays $l$ and $r$ of length $k$ where $l_1=1$, $r_k=n$, $l_i \\le r_i$ for $1 \\le i \\le k$, and $l_i = r_{i-1}+1$ for $2 \\le i \\le k$, and a positive integer $q$ representing the number of modifications needed on $s$, each defined by a positive integer $x$. \n\nFor each modification, find the unique index $i$ such that $l_i \\le x \\le r_i$. Let $a=\\min(x, r_i+l_i-x)$ and $b=\\max(x, r_i+l_i-x)$. Reverse the substring of $s$ from index $a$ to index $b$. \n\nPrint the final string $s$ after all modifications are completed.", "Codeforces1878D"], ["Given a string $s$ of length $n$ and an integer $k$, with arrays $l$ and $r$ of length $k$ satisfying certain conditions. Perform $q$ modifications on $s$, where each modification reverses a substring within specific indexes. Output the final string after all modifications are done.", "Codeforces1878D"], ["Given three positive integers $n$, $k$, and $x$, determine if there exist $k$ distinct integers between $1$ and $n$ whose sum is equal to $x$.", "Codeforces1878C"], ["Given three positive integers, $n$, $k$, and $x$, determine if it is possible to choose $k$ distinct integers between $1$ and $n$ such that their sum is equal to $x$.", "Codeforces1878C"], ["Given a positive integer $n$ ($n \\ge 3$), construct a strictly increasing array of size $n$ such that $3\\cdot a_{i+2}$ is not divisible by $a_i+a_{i+1}$ for all $i$ ($(1 \\le i \\le n-2)$).", "Codeforces1878B"], ["Construct a strictly increasing array of positive integers of length $n$ ($n \\ge 3$) such that $3\\cdot a_{i+2}$ is not divisible by $a_i+a_{i+1}$ for each $i$ ($1\\le i \\le n-2$).", "Codeforces1878B"], ["Given an array $a$ of size $n$ and an integer $k$, determine if there exists a non-empty subsegment of $a$ where $k$ is the integer with the highest frequency compared to any other element in that subsegment.", "Codeforces1878A"], ["Given an array $a$ of size $n$ and an integer $k$, determine if there exists a non-empty subsegment of $a$ where $k$ is the most common element.", "Codeforces1878A"], ["Given an array of non-negative integers $[a_1, a_2, a_3, \\dots, a_{n+1}]$, where the last slot $a_{n+1}$ can be assigned an integer between $0$ and $m$ inclusive. Starting from the second-to-last slot, each slot $a_i$ should be assigned the remainder of dividing the adjacent slot on the right ($a_{i+1}$) by $i$. The goal is to find the number of valid assignments for $a_{n+1}$ that result in exactly $k$ distinct values in the entire array.", "Codeforces1877C"], ["Given an array of non-negative integers $[a_1, a_2, \\ldots, a_{n+1}]$ and two positive integers $m$ and $k$, find the number of ways to assign an integer between $0$ and $m$ (inclusive) to the last slot, such that after assigning values to all slots using the given condition, there are exactly $k$ distinct values in the entire screen.", "Codeforces1877C"], ["Given $n$ teams in a football tournament, each team plays against every other team exactly once. After each match, Pak Chanek is given two integers representing the number of goals scored by each team. The efficiency of a team is calculated as the total number of goals it scores in all its matches minus the total number of goals scored by its opponents in all their matches. One team's efficiency is missing, but the efficiencies of the other $n-1$ teams are known. Determine the efficiency of the missing team using the known efficiencies of the other teams.", "Codeforces1877A"], ["Given the efficiencies of $n-1$ teams, find the efficiency of the remaining team.", "Codeforces1877A"], ["Given an array of familiarity values $a_1, a_2, \\dots, a_n$, for each query $(l_j, r_j, x_j)$, find the minimum time (in seconds) for Chaneka to increase the familiarity value of each part $p$ in the range $l_j \\leq p \\leq r_j$ to at least $x_j$.", "Codeforces1876G"], ["Chaneka is playing a video game with $n$ parts. Each part has a familiarity value. She can attempt the game multiple times, with each attempt taking a certain amount of time. When Chaneka fails a part, her familiarity with that part and the previous parts increases. There are several questions asking for the minimum time required for Chaneka to increase the familiarity values of certain parts to a given threshold.", "Codeforces1876G"], ["Pak Chanek wants to buy exactly $k$ clownfish from a shop. Each clownfish has a size. He can assign a gender to each clownfish, either female or male. He must follow the rules: \n- If he assigns a clownfish to be female, its size must be exactly 1 bigger than the last female he bought.\n- If he assigns a clownfish to be male, its size must be exactly 1 smaller than the last male he bought.\nPak Chanek wants to buy exactly $k$ clownfish such that there is at least one female and one male, and the mean size of the female clownfish is equal to the mean size of the male clownfish. \nFind the minimum possible difference between the maximum and minimum index of the clownfish he buys.", "Codeforces1876F"], ["Given a list of $n$ clownfish with sizes $a_i$, Pak Chanek wants to buy exactly $k$ clownfish to fill his fish tank. Each clownfish can be assigned a gender (male or female) and a size. The assigned gender must follow these rules:\n- If Pak Chanek assigns a clownfish as female, its size must be $1$ bigger than the last female clownfish bought.\n- If Pak Chanek assigns a clownfish as male, its size must be $1$ smaller than the last male clownfish bought.\n\nPak Chanek wants to buy exactly $k$ clownfish such that there is at least one female and one male clownfish, and the mean size of the female clownfish is equal to the mean size of the male clownfish. What is the minimum possible difference in the indices (positions) of the first and last clownfish bought ($r-l$)?", "Codeforces1876F"], ["Let's consider a graph with $n$ vertices and $n-1$ edges. Some edges are directed and some are undirected. We want to direct all undirected edges and assign colors to each edge. The graph becomes a tree if we make all edges undirected.\nWe want to find a way to direct the edges and assign colors such that for any walk starting at any vertex and ending at any vertex, we can stack and unstack balls on a stack based on the direction and color of the edges traversed. A walk is stackable if we can put balls on the stack and unstack them. A walk is ball-stackable if we can only unstack balls of the same color as the traversed edge.\nThe task is to determine if it is possible to achieve this condition, and if so, find a solution that uses the maximum number of different colors.", "Codeforces1876E"], ["Given a graph with $n$ vertices and $n-1$ edges, some of which are directed and some of which are undirected, we want to direct all undirected edges and color each edge. The graph becomes a tree when all edges are undirected. We need to determine if it is possible to direct and color the edges in a way such that all stackable walks (where we can add and remove balls to/from a stack) are also ball-stackable (where the color of the ball removed from the stack matches the color of the edge traversed). If it is possible, we need to find a construction example that uses the maximum number of different colors among all valid ways of directing and coloring.", "Codeforces1876E"], ["Given an array $a$ of $n$ elements, each with value $a_i$, we want to color each element blue or red such that the following conditions hold:\n\n1. The blue subsequence formed by all blue elements is lexicographically smaller than the red subsequence formed by all red elements.\n2. The array $a$ does not contain any imbalanced subarray. An imbalanced subarray is defined as a subarray in which the absolute difference between the number of blue elements and the number of red elements with a specific value $k$ is $2$ or more.\n3. It is possible to color all elements of the array with the same color.\n\nDetermine the number of different colorings that satisfy these conditions, modulo $998\\,244\\,353$. Two colorings are considered different if there is at least one element that is blue in one coloring and red in the other.", "Codeforces1876D"], ["Given an array $a$ of $n$ elements, we want to color each element blue or red. The conditions are:\n\n1. The blue subsequence should be lexicographically smaller than the red subsequence.\n2. No subarray of $a$ should have an imbalance, where the difference between the number of blue and red elements with the same value is 2 or more.\n\nWe need to find the number of different colorings that satisfy these conditions, modulo $998\\,244\\,353$.", "Codeforces1876D"], ["Given an array $a$ of $n$ positive integers, Chaneka wants to find a sequence of operations to circle some elements such that the resulting sequence of uncircled elements is the same as the sequence of operations. If it's not possible, report that it is impossible.", "Codeforces1876C"], ["Given an array of positive integers, Chaneka can circle elements in the array. She wants to perform operations such that the sequence of uncircled elements becomes the same as the sequence of circled elements. Determine if it is possible to achieve this or not.", "Codeforces1876C"], ["Given an array $[a_1,a_2,\\ldots,a_n]$ of $n$ elements, where all elements are initially white. We have to choose one or more different indices and color the elements at those chosen indices black. Then, we color all the white elements whose indices are multiples of the index of at least one black element green. The score is defined as the maximum value of $a_i$ among all the black and green elements. Find the sum of scores for all possible ways of choosing the black indices, modulo $998\\,244\\,353$.", "Codeforces1876B"], ["Given an array of $n$ elements, initially all elements are white. Choose one or more different indices and color the elements at those chosen indices black. Color all white elements whose indices are multiples of the index of at least one black element green. Find the sum of the maximum value of black or green elements for all possible choices of black indices. Print the answer modulo $998,244,353$.", "Codeforces1876B"], ["You are given the following problem:\n\nThere is a village called Khuntien with $n$ residents. The chief, Pak Chanek, needs to inform all of the residents about an important announcement. \n\nPak Chanek can directly share the announcement with one or more residents at a cost of $p$ per person. \n\nAfter receiving the announcement, residents can use a magical helmet-shaped device to share the announcement with other residents. Each resident $i$ can share the announcement with at most $a_i$ other residents at a cost of $b_i$ per share. \n\nPak Chanek can control how the residents share the announcement. \n\nFind the minimum cost for Pak Chanek to notify all $n$ residents in Khuntien about the announcement.", "Codeforces1876A"], ["Pak Chanek wants to notify all $n$ residents in the village of Khuntien about an important announcement. He can directly share the announcement with one or more residents at a cost of $p$ per person. Residents can then use a magical device to share the announcement with other residents. Each resident $i$ can share the announcement with up to $a_i$ other residents at a cost of $b_i$ per share. Pak Chanek wants to minimize the total cost of notifying all residents.", "Codeforces1876A"], ["You are given an array of $n$ nonnegative integers. \nJellyfish performs a series of operations on the array: \n- In each operation, Jellyfish selects an index $i$ and removes the element $a_i$ from the array. \n- Jellyfish then adds the smallest non-negative integer that does not belong to the array to a variable $m$. \n\nWhat is the minimum possible final value of $m$ after performing all the operations optimally?", "Codeforces1875D"], ["Given an array of nonnegative integers, we want to find the minimum possible value of $m$ after performing a series of operations. In each operation, we remove an element from the array and add the minimum excluded (MEX) value of the remaining array to $m$. We need to optimize these operations to minimize the final value of $m$.", "Codeforces1875D"], ["Jellyfish has $n$ green apple pieces, each weighing $1~\\text{kg}$. Jellyfish wants to divide these apple pieces equally among $m$ people. She has a magic knife and can divide any piece into two smaller pieces, each with half the weight. Find the minimum number of operations needed to distribute the apple pieces equally among all people.", "Codeforces1875C"], ["Jellyfish wants to divide $n$ green apple pieces, each weighing 1 kg, equally among $m$ people. Jellyfish can use a magic knife to divide a piece into two pieces, each half the weight of the original. What is the minimum number of operations needed to achieve equal distribution of apple pieces to each person?", "Codeforces1875C"], ["You have a bomb with a timer that starts at $b$ seconds. The timer decreases by $1$ every second. You have $n$ tools that can be used to increase the timer by $x_i$ seconds, but not more than $a$ seconds. What is the maximum amount of time you can delay the bomb from exploding?", "Codeforces1875A"], ["Given a bomb with a timer set to $b$, you have $n$ tools. Each tool, if used, increases the timer by $x_i$ seconds. However, if the timer exceeds $a$, it will be set to $a$. Find the maximum time until the bomb explodes.", "Codeforces1875A"], ["You are given a directed acyclic graph with $n$ vertices and $m$ edges. You start at vertex $1$ and need to reach vertex $n$ in order to fight a final boss. Along the way, there are special events at certain vertices. At these events, you can either receive a card with HP and damage attributes, increase the HP or damage of one of your cards, or receive a prop with power attribute. When you reach vertex $n$, you can choose one of your cards to multiply its damage by $10^9$. Your goal is to maximize the sum of the power of all your cards and props. What is the maximum possible sum of power?", "Codeforces1874G"], ["You are given a directed acyclic graph with $n$ vertices and $m$ edges. The task is to move from vertex $1$ to vertex $n$ and fight the final boss. You can collect cards and props along the way. Each card has HP and damage attributes, and the power of a card is the product of its HP and damage. Props have a power attribute. At certain vertices, you can gain cards with specific HP and damage, increase HP or damage of existing cards, or gain props with power. When you reach vertex $n$, you can choose one card to multiply its damage by $10^9$. Find the maximum sum of power of all cards and props if you make optimal choices.", "Codeforces1874G"], ["Given an integer $n$, count the number of permutations of $[1, 2, \\dots, n]$ such that no subarray $[p_l, p_{l+1}, \\dots, p_r]$ is a permutation of $[l, l+1, \\dots, r]$ for all $l \\leq r \\leq m_l$. Output the result modulo $10^9+7$.", "Codeforces1874F"], ["Count the number of permutations of $[1, 2, \\dots, n]$ where no consecutive subarray is a consecutive subarray of the same length.", "Codeforces1874F"], ["Given a positive integer $n$, consider all distinct permutations of $[1, 2, \\dots, n]$. Count the number of permutations such that when a specific algorithm is applied, the result is greater than or equal to a given limit $lim$. Output this count modulo $10^9+7$.", "Codeforces1874E"], ["Given a function `fun(A)` that recursively partitions an array `A` into two sub-arrays based on the first element as the pivot, we want to count the number of distinct permutations of the array `[1, 2, ..., n]` such that the value of `fun` for that permutation is greater than or equal to a given threshold `lim`. The final answer should be computed modulo `10^9+7`.", "Codeforces1874E"], ["Given $n+1$ cities numbered $0$ to $n$, connected by $n$ roads, where each road has a positive integer level of beauty. Jellyfish wants to find her lost item in city $n$ starting from city $0$. Each day, she randomly chooses a road connected to the city she is currently in and traverses it. The probability of choosing a road is proportional to its beauty. Find the minimum expected number of days Jellyfish needs to find her item if the sum of beauties of all roads is limited to $m$.", "Codeforces1874D"], ["Given $n+1$ cities numbered from $0$ to $n$, connected by $n$ roads. Each road has a positive integer beauty level. Jellyfish starts at city $0$ and wants to reach city $n$ to find her fufu. Each day, Jellyfish randomly chooses a road connected to her current city to traverse. The probability of choosing a road is proportional to its beauty level. Find the minimum expected number of days Jellyfish needs to reach city $n$, given that the sum of beauty levels of all roads must be less than or equal to $m$.", "Codeforces1874D"], ["You are given a town with $n$ cities and $m$ roads. The monsters are in the $n$-th city and you need to move from the $1$-st city to the $n$-th city to defeat them. You and your friend can drive a robot together, but you both need to choose a road starting from the same city. If you both choose a road ending in the same city, you successfully move the robot to that city. Otherwise, the roads will be destroyed and the robot stays in the original city. Your goal is to maximize the probability of reaching the $n$-th city by choosing the roads optimally.", "Codeforces1874C"], ["Given $n$ cities and $m$ directed roads, find the maximum probability of successfully reaching city $n$ from city $1$ by choosing two undestroyed roads starting at the current city. If no undestroyed roads are available, the mission is considered a failure. Asuka chooses a road randomly, and Jellyfish wants to choose the roads optimally.", "Codeforces1874C"], ["Given non-negative integers $a$, $b$, $c$, $d$, and $m$, the goal is to transform $(a,b)$ to $(c,d)$ using the following operations: \n- Bitwise AND: $x := x\\,\\&\\,y$\n- Bitwise OR: $x := x\\,|\\,y$\n- Bitwise XOR: $y := x \\oplus y$\n- Bitwise XOR with a constant: $y := y \\oplus m$", "Codeforces1874B"], ["Given non-negative integers $a$, $b$, $c$, $d$, and $m$, we want to find the minimum number of operations required to transform $(a,b)$ to $(c,d)$, where the operations include bitwise AND, bitwise OR, bitwise XOR, and bitwise XOR with $m$.", "Codeforces1874B"], ["Given two sets of green apples, Jellyfish and Gellyfish play a game with $k$ rounds. In each round, either Jellyfish or Gellyfish can choose to swap one of their apples with the other player's apple or do nothing. Both players aim to maximize the sum of the values of their own apples. Determine the final sum of the value of Jellyfish's apples after all $k$ rounds, assuming both players play optimally.", "Codeforces1874A"], ["Given two sets of green apples, Jellyfish and Gellyfish will play a game with a certain number of rounds. In each round, the players can choose to swap an apple or do nothing. Both players want to maximize the sum of the values of their own apples. Determine the final sum of the values of Jellyfish's apples after all rounds, assuming optimal play by both players.", "Codeforces1874A"], ["Marcel and Valeriu are in a city with $n$ buildings connected by roads. Marcel wants to catch Valeriu, who starts at a different building. Each player can move to an adjacent building or stay in the same building. Valeriu can predict Marcel's next move and make his move accordingly. Is there a strategy for Valeriu to always escape Marcel?", "Codeforces1873H"], ["Marcel and Valeriu are in a city with buildings and roads connecting them. Marcel wants to catch Valeriu, who can predict Marcel's moves. Can Valeriu escape Marcel indefinitely?", "Codeforces1873H"], ["Given a string consisting of only the characters $\\texttt{A}$ and $\\texttt{B}$, find the maximum number of coins that can be obtained by performing the following operations:\n- Change any occurrence of $\\texttt{AB}$ to $\\texttt{BC}$ and earn a coin.\n- Change any occurrence of $\\texttt{BA}$ to $\\texttt{CB}$ and earn a coin.", "Codeforces1873G"], ["Given a string made up of characters A and B, determine the maximum number of coins that can be obtained by repeatedly replacing substrings AB with BC or BA with CB.", "Codeforces1873G"], ["Given an array of tree heights $h_1, h_2, \\dots, h_n$ and the corresponding number of fruits $a_1, a_2, \\dots, a_n$ on each tree, find the length of the longest contiguous subarray such that for each consecutive pair of heights $(h_i, h_{i+1})$ in the subarray, $h_i$ is divisible by $h_{i+1}$. However, the sum of fruits collected from all the trees in the subarray must not exceed a given limit $k$.", "Codeforces1873F"], ["Given an array of heights of trees, find the length of the longest contiguous subarray such that each element is divisible by its adjacent element. Additionally, the sum of the fruits collected from the trees in the subarray should not exceed a given limit.", "Codeforces1873F"], ["Given an array $a$ of $n$ integers, find the largest height $h$ such that a tank filled with water can be built around the coral made of $n$ columns, where each column has a height of $a_i$ units, such that the height of each column is at most $h$ or less, and the total amount of water used is at most $x$ units.", "Codeforces1873E"], ["Given an array of integers $a$ representing the heights of $n$ columns, find the largest possible height $h$ such that the total amount of water needed to fill the tank is at most $x$.", "Codeforces1873E"], ["Given a strip of $n$ cells that are either black or white, the objective is to determine the minimum number of operations required to remove all the black cells. In each operation, we can select any $k$ consecutive cells and change their color to white.", "Codeforces1873D"], ["Given a strip of paper with $n$ cells, each cell is either black or white. In one operation, you can turn $k$ consecutive cells white. Find the minimum number of operations required to remove all black cells.", "Codeforces1873D"], ["Determine the number of points Vlad earned by firing arrows at a $10 \\times 10$ target consisting of five rings. Each ring has a different point value, with the outermost ring being worth 1 point and the center ring being worth 5 points.", "Codeforces1873C"], ["Determine the total points Vlad received by firing arrows at a $10 \\times 10$ target made of five different rings with varying point values.", "Codeforces1873C"], ["Given an array $a$ of $n$ digits, find the maximum possible product of all these digits by adding $1$ to exactly one digit in the array.", "Codeforces1873B"], ["Given an array $a$ of $n$ digits, find the maximum product that can be obtained by adding $1$ to exactly one of the digits in $a$.", "Codeforces1873B"], ["Given three cards with letters $a$, $b$, $c$ in a row, can you make the row spell out \"abc\" by swapping two cards at most once? Answer \"YES\" if possible, and \"NO\" if not.", "Codeforces1873A"], ["Can you transform the row of cards $\\texttt{a}$, $\\texttt{b}$, $\\texttt{c}$ into $\\texttt{abc}$ by swapping only two cards?", "Codeforces1873A"], ["Given an array $a$ of $n$ positive integers. Choose two indices $l$ and $r$ ($1 \\le l \\le r \\le n$) and replace the subarray $a[l \\ldots r]$ with the product of its elements. Find the subarray that maximizes the sum of the array after applying this operation.", "Codeforces1872G"], ["Given an array of positive integers, select a contiguous subarray and replace it with the product of its elements. Find the subarray that maximizes the sum of the array after performing this operation.", "Codeforces1872G"], ["Given an array $a$ of size $n$ and an array $c$ of size $n$, where $a_i$ represents the animal that animal $i$ is afraid of, and $c_i$ represents the cost of animal $i$. Determine the maximum total profit that can be obtained by selling the animals in a specific order.\n\nWhen selling an animal $i$, two outcomes are possible:\n- If the animal $a_i$ that animal $i$ is afraid of has already been sold, receive $c_i$ money.\n- If the animal $a_i$ that animal $i$ is afraid of has not yet been sold, receive $2 \\cdot c_i$ money.\n\nFind the permutation of the animals that maximizes the total profit.", "Codeforces1872F"], ["Given a list of $n$ animals, each with a fear factor ($a_i$) and a cost ($c_i$), we want to find the best order to sell them to maximize profit. Selling an animal gives different amounts of money depending on whether the animal it fears has already been sold or not. We want to find the order that yields the highest total profit.", "Codeforces1872F"], ["Given an array of integers $a$ and a binary string $s$, we need to implement a data structure that can handle two types of queries:\n\n1) Update query: Given indices $l$ and $r$, replace each character $s_i$ for $l \\leq i \\leq r$ with its opposite (replace $\\texttt{0}$ with $\\texttt{1}$ and vice versa).\n\n2) Query: Given a character $g$ ($g = \\texttt{0}$ or $g = \\texttt{1}$), calculate the bitwise XOR of the numbers $a_i$ for all indices $i$ such that $s_i = g$.\n\nWe need to handle multiple queries efficiently.", "Codeforces1872E"], ["Given an array $a$ of size $n$ and a binary string $s$ of length $n$, implement a data structure that can answer two types of queries:\n\n1) \"1 $l$ $r$\" replaces each character $s_i$ for $l \\leq i \\leq r$ with its inverse.\n2) \"2 $g$\" calculates the XOR of all elements in $a$ where the corresponding character in $s$ is $g$.", "Codeforces1872E"], ["Given three positive integers $n$, $x$, and $y$, find the maximum score among all permutations of length $n$ where the score of a permutation is calculated as the sum of elements at indices divisible by $x$, minus the sum of elements at indices divisible by $y$.", "Codeforces1872D"], ["Given three integers $n$, $x$, and $y$, find the maximum possible score among all permutations of length $n$. The score of a permutation is the sum of elements at indices divisible by $x$, minus the sum of elements at indices divisible by $y$.", "Codeforces1872D"], ["Given two integers $l$ and $r$, find positive integers $a$ and $b$ such that $l \\le a + b \\le r$ and $\\gcd(a, b) \\neq 1$. If such integers do not exist, report that they cannot be found.", "Codeforces1872C"], ["Given two integers $l$ and $r$, find positive integers $a$ and $b$ such that $l \\le a + b \\le r$ and $\\gcd(a, b) \\neq 1$, or report that they do not exist.", "Codeforces1872C"], ["You start in room 1 of an infinitely long corridor divided into square rooms. There are traps located in certain rooms that will activate a certain number of seconds after you enter them. Once a trap is activated, you cannot enter or exit that room. You need to find the maximum value of $k$ such that you can travel from room 1 to room $k$ and then safely return to room 1 without encountering an activated trap.", "Codeforces1872B"], ["Determine the maximum value of $k$ such that you can safely travel from room $1$ to room $k$ and back to room $1$ in a corridor with traps.", "Codeforces1872B"], ["You have two vessels of water with initial masses $a$ and $b$ grams. A cup can hold up to $c$ grams of water. The goal is to make the masses of water in the vessels equal using the cup. What is the minimum number of moves required to achieve this?", "Codeforces1872A"], ["Given two vessels of water with masses $a$ and $b$, and an empty cup with a maximum capacity of $c$, what is the minimum number of moves needed to make the masses in the vessels equal, by transferring up to $c$ grams of water between the vessels in each move?", "Codeforces1872A"], ["You have a directed graph with weighted edges. Each vertex can be either highlighted or normal. The cost of the graph is the minimum sum of edge weights that need to be selected so that from each normal vertex one can reach at least one highlighted vertex. You need to compute the cost of the graph after each query. The queries can make a vertex highlighted or normal. Output the cost of the graph after each query.", "Codeforces1870H"], ["You are given a weighted directed graph with $n$ vertices and $m$ edges. Each vertex can be highlighted or normal. The cost of the graph is the minimum sum of selected edge weights so that each normal vertex can reach at least one highlighted vertex using the selected edges only. You need to compute the cost of the graph after each query. Queries can make a vertex highlighted or normal. Output the cost of the graph after each query.", "Codeforces1870H"]]